# You can copy this tutorial to ~/.config/domestobot/config.toml to play with it
# while you read it.
# TOML reference: https://toml.io/en/v1.0.0


default_subcommands = [                    # Optional subcommands to run if
    'greet_user',                          # invoked as `domestobot`. Help is
    'greet_twice',                         # shown if this field is not set.
    'echo_platform'
]


# `[[steps]]` defines an individual step. They are just function wrappers around
# shell commands that can be used as Typer sub-commands. You can read more about
# Typer here: https://typer.tiangolo.com/
[[steps]]
name = 'greet_user'                        # Sub-command name to use when
                                           # running `domestobot <name>`.

doc = "Demo a simple step using `echo`."   # Shown in `domestobot --help` and
                                           # in tab completion for some shells.

title = 'Running `echo Hello!`'            # Shown before any command is run.

command = ['echo', 'Hello!']               # Command segments to be passed to
                                           # python's `subprocess.run`.


# Sometimes you want more than one command in a step, so you can also use
# `commands` instead of `command`.
[[steps]]
name = 'greet_twice'
doc = "Demo multiple commands in a step."
title = 'Running echo twice'
commands = [                               # A step must have one of `command`,
     ['echo', 'First echo'],               # `commands` or `env`.
     ['echo', 'Second echo'],
]


# Steps can have multiple `envs` (just like a config has multiple `steps`), to
# run commands on specific platforms. You can add as many or as few envs as you
# want and they will only run if their `os` field matches your platform's name.
[[steps]]
name = 'echo_platform'
doc = "Demo platform-specific commands."

[[steps.envs]]
os = 'Linux'                               # `os` should match `uname`:
                                           # https://linux.die.net/man/1/uname
title = 'Running echo on Linux'
command = ['echo', "You're using Linux"]

[[steps.envs]]
os = 'Darwin'
title = 'Running echo on Darwin'
command = ['echo', "You're using Darwin"]
