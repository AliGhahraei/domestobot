* domestobot
Your own trusty housekeeper

[[https://github.com/AliGhahraei/domestobot/actions/workflows/python-tests.yml][https://github.com/AliGhahraei/domestobot/actions/workflows/python-tests.yml/badge.svg]]

[[https://static.wikia.nocookie.net/gtawiki/images/2/20/Domestobot-GTAVCS-Front.png]]

** Description
A python command line app to maintain *nix systems. It helps automating os
upgrades, running backup tools, etc. It gets the commands to do all this
from a config file, but it automatically generates shell completions. It can
also decide whether to run a command or not depending on the platform it's
running on.
"Domestobot" is a robotic servant from the [[https://gta.fandom.com/wiki/Domestobot][GTA series]].

** Installation
Just clone the repo and install it using [[https://pipxproject.github.io/pipx/][pipx]]:

#+begin_src shell
pipx install -e /path/to/domestobot
#+end_src

alternatively, you can also use plain pip:

#+begin_src shell
pip install --user -e /path/to/domestobot
#+end_src

** Usage
Domestobot uses a configuration file with a series of =steps= defining which
shell commands or python functions you want to run.

Steps are invoked running =domestobot <step name>= and you can also run
=domestobot= without a name to run all steps sequentially in the order they
were defined.

Completions for the current shell only need to be installed once running
=domestobot --install-completion= and after that they will be dynamically
generated.

You can use [[file:config_tutorial.toml][config_tutorial.toml]] as a starting point. Copy it to
=~/.config/domestobot/config.toml= so you can test it while you read.

After you're done, run =domestobot --help= to see your steps and additional
domestobot commands.

** Development
To get a working environment, it is recommended to install [[https://github.com/jazzband/pip-tools][pip-tools]] inside
a virtualenv and development requirements using [[https://pydoit.org/][doit]]:

#+begin_src shell
doit sync
#+end_src

Doit can also sort import statements, update requirements, etc. You can see
available commands with =doit list=.


To run a local build (including unit tests), run [[https://nox.thea.codes/en/stable/][nox]] inside the project
directory:

#+begin_src shell
nox
#+end_src

This same command is run by Github Actions for every pushed commit.
